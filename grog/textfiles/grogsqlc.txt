GROG - Generalized Relational Object Generator
Copyright 1993 by Mitch C. Amiano
All Rights Reserved


This document is a reference to the GROG protocol as used for an embedded-SQL
in C language precompiler.  It first describes the directory structure of 
instantiated GROG objects, then gives an abstracted outline of each of the 
files associated with an instantiated GROG object.


The directory structure

All objects instantiated by the GROG/SQL-C exporter consist of two, and only
two, operating system flat files: a '.h' header file and a '.c', '.pc' or a 
'.ec' source code file.  The file name extensions are irrelevant, since they
are user-configurable.

For a GROG object named "customer", assuming the use of '.h' and '.c' 
extensions, the GROG/SQL-C exporter would create a header file and a source
code file, named "customer.h" and "customer.c" respectively.

All GROG/SQL-C export files are placed into target directories as specified 
by the default or user-configuration.  The default for header files is
"./include", while the default for source code files is "./src".

The default hierarchy generated by GROG/SQL-C, assuming the default settings
and source code extentions of ".c", and two GROG objects named "customer" 
and "product", would appear as follows:

	./include
		customer.h
		product.h

	./src
		customer.c
		product.c

One last note pertaining to the file locations.  The GROG/SQL-C exported 
sources rely upon a number of predefined macros, manifest constants, and 
type definitions.  The definitions for these constructs are held in a
predefined header file, named "grog.h", which is included in the GROG/SQL-C
package.  It may be copied to the header file target directory if desired,
but by default remains with the files in the GROG/SQL-C package.  It must
be present in a "#include" path in order for the precompiler to find it.



GROG/SQL-C file outlines

The file outlines included below use the following phrases and words to
describe commonly used C language programming constructs.

   Term             Usage
	---------------- ----------------------------------------------------
	C-Comment        A legal C language comment, using /* and */
   (note)           A note on the meaning and/or content of a construct
	C-Include-Directives   A C #include preprocessor directive
	SQL-Include-Directives   A E/SQL EXEC SQL include preprocessor directive
	Include-Wrapper  A C preprocessor #ifndef/#define/#endif construct to
						  prevent redefinition of multiply-included headers. 
   C-Definition     A struct, union, enum, or typedef
   C-Declaration    An exported variable, or typedef.


Structure of exported object header files

   
	Beginning-of-File

   Include-Wrapper

   C-Comment   ( GROG_general_title + generation_date )

   C-Include-Directives   ( GROG_common_header_file )

   C-Comment   ( GROG_class_specific_title )

   C-Definition   (struct_for_class_definition+data_member_declarations
		+internal_member_declarations+method_member_declarations
		+typdef_alias)

   C-Declaration   (exported_class_name)

	End-of-File


Structure of exported object source code files

	Beginning-of-File

   C-Comment   ( GROG_general_title + generation_date )

   C-Comment   ( GROG_class_specific_title )

   C-Comment   ( Include_Directives_not_placed )

   C-Include-Directives   ( GROG_include + 
		base_class_include + ...  + class_include )

   SQL-Include-Directives

   C-Comment   ( other_header_files_placed_here )

   C-Comment   ( validator_methods_placed_here )

   C-Comment   ( prologue to each data-member-validator-function )
	data-member-validate-function-definitions

   C-Comment   ( prologue to object-validator-function )
	object-validate-function-definition

   C-Comment   ( prologue to object-insertor-function )
	object-insertor-function-definition

   C-Comment   ( prologue to object-deletor-function )
	object-deletor-function-definition

   C-Comment   ( prologue to object-destructor-function )
	object-destructor-function-definition

   C-Comment   ( prologue to object-constructor-function )
	object-constructor-function-definition

   C-Comment   ( meta-object declaration, definition, and initialization )
	meta-object-defition-initialization

	End-of-File
